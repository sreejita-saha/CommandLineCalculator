import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Books {
    private static final List<Double> savedAreas = new ArrayList<>();  // Stores user-selected areas
    private static final Scanner input = new Scanner(System.in);  // Shared Scanner instance

    public static void main(String[] args) {
        displayAreaCalculator();
    }

    public static void displayAreaCalculator() {
        int choice;
        do {
            showMenu();
            choice = getUserChoice();
            double area = 0;

            switch (choice) {
                case 1: area = calculateRectangleArea(); break;
                case 2: area = calculateCircleArea(); break;
                case 3: area = calculateTriangleArea(); break;
                case 4: area = calculateTrapezoidArea(); break;
                case 5: area = calculateEllipseArea(); break;
                case 6: area = calculateParallelogramArea(); break;
                case 7: area = calculateSectorArea(); break;
                case 8: recallSavedAreas(); break;
                case 9: addAllSavedAreas(); break;
                case 0: System.out.println("Exiting Area Calculator..."); break;
                default: System.out.println("Invalid choice. Please select a valid option.");
            }

            if (choice >= 1 && choice <= 7) {
                saveAreaPrompt(area);
            }

        } while (choice != 0);
    }

    private static void showMenu() {
        System.out.println("\nWelcome to the Advanced Area Calculator for Tradespeople.");
        System.out.println("""
                The following options are:
                1. Floor/Wall Area (Rectangle)       2. Circle Area
                3. Triangle Area                     4. Trapezoid Area
                5. Ellipse Area                      6. Parallelogram Area
                7. Sector of a Circle Area           8. Recall Saved Areas
                9. Add All Saved Areas               0. Exit""");
    }

    private static int getUserChoice() {
        System.out.print("Enter your choice: ");
        return input.nextInt();
    }

    private static double calculateRectangleArea() {
        System.out.print("Enter the length (in meters): ");
        double length = input.nextDouble();
        System.out.print("Enter the width (in meters): ");
        double width = input.nextDouble();
        return length * width;
    }

    private static double calculateCircleArea() {
        System.out.print("Enter the radius (in meters): ");
        double radius = input.nextDouble();
        return Math.PI * radius * radius;
    }

    private static double calculateTriangleArea() {
        System.out.print("Enter the base (in meters): ");
        double base = input.nextDouble();
        System.out.print("Enter the height (in meters): ");
        double height = input.nextDouble();
        return 0.5 * base * height;
    }

    private static double calculateTrapezoidArea() {
        System.out.print("Enter the first base length (in meters): ");
        double base1 = input.nextDouble();
        System.out.print("Enter the second base length (in meters): ");
        double base2 = input.nextDouble();
        System.out.print("Enter the height (in meters): ");
        double height = input.nextDouble();
        return 0.5 * (base1 + base2) * height;
    }

    private static double calculateEllipseArea() {
        System.out.print("Enter the major radius (in meters): ");
        double majorRadius = input.nextDouble();
        System.out.print("Enter the minor radius (in meters): ");
        double minorRadius = input.nextDouble();
        return Math.PI * majorRadius * minorRadius;
    }

    private static double calculateParallelogramArea() {
        System.out.print("Enter the base length (in meters): ");
        double base = input.nextDouble();
        System.out.print("Enter the height (in meters): ");
        double height = input.nextDouble();
        return base * height;
    }

    private static double calculateSectorArea() {
        System.out.print("Enter the radius (in meters): ");
        double radius = input.nextDouble();
        System.out.print("Enter the angle (in degrees): ");
        double angle = input.nextDouble();
        return (Math.PI * Math.pow(radius, 2) * angle) / 360;
    }

    private static void recallSavedAreas() {
        if (savedAreas.isEmpty()) {
            System.out.println("No areas saved yet.");
        } else {
            System.out.println("Saved areas:");
            for (int i = 0; i < savedAreas.size(); i++) {
                System.out.printf("%d. %.2f square meters%n", i + 1, savedAreas.get(i));
            }
        }
    }

    private static void addAllSavedAreas() {
        if (savedAreas.isEmpty()) {
            System.out.println("No areas saved yet.");
        } else {
            double totalArea = 0;
            for (double area : savedAreas) {
                totalArea += area;
            }
            System.out.printf("The total of all saved areas is: %.2f square meters.%n", totalArea);
        }
    }

    private static void saveAreaPrompt(double area) {
        System.out.printf("The calculated area is: %.2f square meters.%n", area);
        System.out.print("Do you want to save this area for future use? (y/n): ");
        input.nextLine();  // Consume leftover newline character
        String saveChoice = input.nextLine().trim().toLowerCase();
        if (saveChoice.equals("y")) {
            savedAreas.add(area);
            System.out.println("Area has been saved.");
        } else {
            System.out.println("Area was not saved.");
        }
    }
}
